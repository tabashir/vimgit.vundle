" Visual
set showcmd
set timeoutlen=500
set cf  " Enable error files & error jumping.
set clipboard+=unnamed  " Yanks go on clipboard instead.
set history=256  " Number of things to remember in history.
set autowrite  " Writes on make/shell commands
set ruler  " Ruler on
set nu  " Line numbers on
set wrap  " Line wrapping
set hlsearch  "search highlight
set cursorline

" Formatting 
set ts=2  " Tabs are 2 spaces
set bs=2  " Backspace over everything in insert mode
set shiftwidth=2  " Tabs under smart indent
set incsearch
set cinoptions=:0,p0,t0
set cinwords=if,else,while,do,for,switch,case
set formatoptions=tcqr
set ignorecase smartcase
set scrolloff=5
set autoread
set autoindent
" set noexpandtab
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set textwidth=0

set showmatch  " Show matching brackets.
set mat=5  " Bracket blinking.
set laststatus=2  " Always show status line.

"let g:buftabs_in_statusline=1
"let g:buftabs_active_highlight_group="Question"

"Visual Bell no Sound
set noerrorbells  " No noise.
set visualbell

" Mouse selection 
set mouse +=a

"Colours
set background=dark
colorscheme solarized
"let g:solarized_termcolors=256
"let g:solarized_termcolors=16
"let g:solarized_visibility = "high"
"let g:solarized_contrast = "high"
set t_Co=256

let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
" let g:airline_section_c = ''
let g:airline_theme='dark'
" let g:airline_theme='base16'

"if !exists('g:airline_symbols')
"  let g:airline_symbols = {}
"endif
"let g:airline_symbols.space = "\ua0"

let g:powerline_pycmd = "py3"

"highlighting
hi CursorLine term=bold cterm=bold gui=bold
hi Error term=underline cterm=underline ctermfg=5 gui=underline

"for indent and tab guides
hi IndentGuidesOdd ctermbg=lightgrey
hi IndentGuidesEven ctermbg=darkgrey

" Syntastic
let g:syntastic_coffee_lint_options = " -f ~/.vim/coffeelint.json "
let g:syntastic_check_on_open=1
let g:syntastic_auto_jump=1
let g:syntastic_loc_list_height=5
let g:syntastic_enable_signs=1
let g:syntastic_enable_highlighting = 0
let g:JSLintHighlightErrorLine = 0

let g:xml_syntax_folding=1
" au FileType xml setlocal foldmethod=syntax foldlevelstart=999 foldminlines=2


function! StatusLine(current, width)
  let l:s = ''

  if a:current
    let l:s .= crystalline#mode() . crystalline#right_mode_sep('')
  else
    let l:s .= '%#CrystallineInactive#'
  endif
  let l:s .= ' %f%h%w%m%r '
  if a:current
    let l:s .= crystalline#right_sep('', 'Fill') . ' %{fugitive#head()}'
  endif

  let l:s .= '%='
  if a:current
    let l:s .= crystalline#left_sep('', 'Fill') . ' %{&paste ?"PASTE ":""}%{&spell?"SPELL ":""}'
    let l:s .= crystalline#left_mode_sep('')
  endif
  if a:width > 80
    let l:s .= ' %{&ft}[%{&enc}][%{&ffs}] %l/%L %c%V %P '
  else
    let l:s .= ' '
  endif

  return l:s
endfunction

function! TabLine()
  let l:vimlabel = has('nvim') ?  ' NVIM ' : ' VIM '
  return crystalline#bufferline(2, len(l:vimlabel), 1) . '%=%#CrystallineTab# ' . l:vimlabel
endfunction

let g:crystalline_enable_sep = 1
let g:crystalline_statusline_fn = 'StatusLine'
let g:crystalline_tabline_fn = 'TabLine'
let g:crystalline_theme = 'default'

set showtabline=2
set guioptions-=e
set laststatus=2
